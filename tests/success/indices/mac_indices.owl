locality A
locality B

name nA<i> : nonce @ A
name k : mackey (exists i. Name(nA<i>)) @ A, B

def alice<i> () @ A 
    requires corr(nA<i>) 
             /\ (/\_i [nA<i>] <= adv)
: Unit = 
    let nA = get(nA<i>) in 
    output concat(nA, mac(get(k), pack<i>(nA)))
