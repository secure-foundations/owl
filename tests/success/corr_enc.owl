locality alice 
locality bob 

name x : nonce @ alice
name k : enckey Name(x) @ bob

name skB : sigkey Name(k) @ bob

def alice (vkB : vk(skB)) @ alice 
    : Unit = 
    input t, _ in 
    input m, _ in 
    corr_case skB in (
    case vrfy(vkB, t, m) 
    | Some k' => 
        let k'' : if sec(skB) then Name(k) else Data<adv> = k' in
        let c : if sec(skB) then Data<static> else Data<adv> = aenc(k'', get(x)) in
        output c
    | None => ()
    )

