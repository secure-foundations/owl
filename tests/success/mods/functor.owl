locality alice

module type S = { 
    name x : nonce @ alice
}

module Srefined = {
    name x : nonce @ alice
    name z : nonce @ alice
} 

module M = functor (X : S) => {
    module Z = X
    name k : enckey Name(Z.x) @ alice
    def tst() @ alice : Unit = 
        let k = get(Z.x) in 
        ()
}
    
